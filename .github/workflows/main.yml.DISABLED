name: CI with Deploy to K8S

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master
      - develop

# This workflow contains a jobs for build, push and deploy service to k8s

jobs:
  
  build_push_deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: checkout git commit
      uses: actions/checkout@v2

    - name: set branch name and docker tag
      run: 
        echo "::set-env name=BRANCH_NAME::${GITHUB_REF##*/}"

    - name: build and push docker image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ogwindingtree/arbor-backend
        tag_with_ref: true
        tag_with_sha: true

    - name: save DigitalOcean kubeconfig
      uses: digitalocean/action-doctl@v1
      env:
        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      with:
        args: kubernetes cluster kubeconfig show arbor-$BRANCH_NAME > $GITHUB_WORKSPACE/kubeconfig

    - name: set imagePullSecret
      run: |
        kubectl --kubeconfig $GITHUB_WORKSPACE/kubeconfig create secret docker-registry dockerhub-registry \
            --docker-server=https://index.docker.io/v1/ \
            --docker-username=${{ secrets.DOCKER_USERNAME }} \
            --docker-password=${{ secrets.DOCKER_PASSWORD }} \
            --dry-run -o yaml | kubectl --kubeconfig $GITHUB_WORKSPACE/kubeconfig apply -f - 

    - name: deploy service to k8s
      run: |
        helm repo add gruntwork https://helmcharts.gruntwork.io
        helm --kubeconfig $GITHUB_WORKSPACE/kubeconfig upgrade --install -f values.default.yaml --set containerImage.tag=sha-${GITHUB_SHA::7} arbor-backend gruntwork/k8s-service

    # - name: verify deployment
    #   run: kubectl --kubeconfig $GITHUB_WORKSPACE/kubeconfig rollout status deployment/arbor-backend